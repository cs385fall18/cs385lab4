Script started on 2018-10-02 05:43:46+0000
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sudo usermod -a -G docker $USER[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[17Pnano makefile sudo usermod -a -G docker $USER[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ksh script
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 2: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 7: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 12: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 17: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 22: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 27: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 32: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 37: script: :8080/fibonacci: not found
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sh script.script/script
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 2: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 7: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 12: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 17: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 22: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 27: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 32: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 37: ./script: :8080/fibonacci: not found
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script 
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;50H(B[0;7m[ Reading File ](B[m[39;56H(B[0;7m 42 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                         script                                                    [1;114H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[3d[39;49m(B[mab -p payload.json -T application/json -m POST -c 50 -n 10000 -s 1 -r http://35.185.241.145[4d:8080/fibonacci > result_fifty[6dgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' a_file > output1[8dab -p payload.json -T application/json -m POST -c 100 -n 10000 -s 1 -r http://35.185.241.145[9d:8080/fibonacci > result_fifty[11dgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' a_file > output2[13dab -p payload.json -T application/json -m POST -c 500 -n 10000 -s 1 -r http://35.185.241.145[14d:8080/fibonacci > result_fifty[16dgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' a_file > output3[18dab -p payload.json -T application/json -m POST -c 1000 -n 10000 -s 1 -r http://35.185.241.145[19d:8080/fibonacci > result_fifty[21dgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' a_file > output4[23dab -p payload.json -T application/json -m POST -c 2000 -n 10000 -s 1 -r http://35.185.241.145[24d:8080/fibonacci > result_fifty[26dgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' a_file > output5[28dab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145[29d:8080/fibonacci > result_fifty[31dgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' a_file > output6[33dab -p payload.json -T application/json -m POST -c 10000 -n 30000 -s 1 -r http://35.185.241.145[34d:8080/fibonacci > result_fifty[36dgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' a_file > output7[38dab -p payload.json -T application/json -m POST -c 15000 -n 450000 -s 1 -r http://35.185.241.145[3d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;106H(B[0;7mModified(B[m7[2;38r8[2dM[1;41r[4;1H[?12l[?25h[?25l[A[?12l[?25h[?25l[36m#!/bin/sh[39m(B[m[?12l[?25h[?25l[39d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                      [40;1H Y(B[m Yes[K[41d(B[0;7m N(B[m No  [41;18H(B[0;7mC(B[m Cancel[K[39;63H[?12l[?25h[?25l[40d(B[0;7m^G(B[m Get Help[40;29H(B[0;7mM-D(B[m DOS Format[40;57H(B[0;7mM-A(B[m Append[40;85H(B[0;7mM-B(B[m Backup File[41d(B[0;7m^C(B[m Cancel[17G            (B[0;7mM-M(B[m Mac Format[41;57H(B[0;7mM-P(B[m Prepend[41;85H(B[0;7m^T(B[m To Files[39d(B[0;7mFile Name to Write: script                                   (B[m[39;27H[?12l[?25h[?25l[K[1;114H[1;106H(B[0;7m        (B[m[39;49H(B[0;7m[ Wrote 43 lines ](B[m[J[41;115H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script [1Psh ./script
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 3: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 8: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 13: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 18: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 23: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 28: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 33: ./script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script: 38: ./script: :8080/fibonacci: not found
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sh ./scriptnano script [1Psh ./scriptnano script [1Psh ./scriptnano script [1Psh ./script[2Pscript
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 3: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 8: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 13: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 18: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 23: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 28: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 33: script: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
script: 38: script: :8080/fibonacci: not found
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sh script./scriptnano script [1Psh ./script[2Pscriptudo usermod -a -G docker $USER[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[17Pnano makefile make webservernano makefile sudo usermod -a -G docker $USER[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ch script[K./scriptnano script [1Psh ./script[2Pscript[Kcat newfile 
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ ./script
bash: ./script: Permission denied
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ mv script script.sh
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ mv script script.sh[11P./script
bash: ./script: No such file or directory
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ ./script.sh
bash: ./script.sh: Permission denied
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sudo ./script.sh
sudo: ./script.sh: command not found
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sudo ./script.shs./script.shh ./script.sh
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 3: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 8: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 13: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 18: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 23: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 28: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 33: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 38: ./script.sh: :8080/fibonacci: not found
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ ab -p payload.json -T application/json -m POST -c 50 -n 10000 -s 1 -r http://35.185.241.145
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ :8080/fibonacci > result_fifty[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kab -p payload.json -T application/json -m POST -c 50 -n 10000 -s 1 -r http://35.185.241.145
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ :8080/fibonacci > result_fifty[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cab -p payload.json -T application/json -m POST -c 50 -n 10000 -s 1 -r http://35.185.241.145[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csudo sh ./script.sh[K
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 3: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 8: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 13: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 18: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 23: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 28: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 33: ./script.sh: :8080/fibonacci: not found
ab: invalid URL
Usage: ab [options] [http[s]://]hostname[:port]/path
Options are:
    -n requests     Number of requests to perform
    -c concurrency  Number of multiple requests to make at a time
    -t timelimit    Seconds to max. to spend on benchmarking
                    This implies -n 50000
    -s timeout      Seconds to max. wait for each response
                    Default is 30 seconds
    -b windowsize   Size of TCP send/receive buffer, in bytes
    -B address      Address to bind to when making outgoing connections
    -p postfile     File containing data to POST. Remember also to set -T
    -u putfile      File containing data to PUT. Remember also to set -T
    -T content-type Content-type header to use for POST/PUT data, eg.
                    'application/x-www-form-urlencoded'
                    Default is 'text/plain'
    -v verbosity    How much troubleshooting info to print
    -w              Print out results in HTML tables
    -i              Use HEAD instead of GET
    -x attributes   String to insert as table attributes
    -y attributes   String to insert as tr attributes
    -z attributes   String to insert as td or th attributes
    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)
    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
                    Inserted after all normal header lines. (repeatable)
    -A attribute    Add Basic WWW Authentication, the attributes
                    are a colon separated username and password.
    -P attribute    Add Basic Proxy Authentication, the attributes
                    are a colon separated username and password.
    -X proxy:port   Proxyserver and port number to use
    -V              Print version number and exit
    -k              Use HTTP KeepAlive feature
    -d              Do not show percentiles served table.
    -S              Do not show confidence estimators and warnings.
    -q              Do not show progress when doing more than 150 requests
    -l              Accept variable document length (use this for dynamic pages)
    -g filename     Output collected data to gnuplot format file.
    -e filename     Output CSV file with percentages served
    -r              Don't exit on socket receive errors.
    -m method       Method name
    -h              Display usage information (this message)
    -I              Disable TLS Server Name Indication (SNI) extension
    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)
    -f protocol     Specify SSL/TLS protocol
                    (SSL2, TLS1, TLS1.1, TLS1.2 or ALL)
./script.sh: 38: ./script.sh: :8080/fibonacci: not found
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sudo sh ./script.shab -p payload.json -T application/json -m POST -c 50 -n 10000 -s 1 -r http://35.185.241.145[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csudo sh ./script.sh[K[Knano script.sh 
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;50H(B[0;7m[ Reading File ](B[m[39;56H(B[0;7m 43 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                        script.sh                                                  [1;114H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[5d[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[7d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output1[9dab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[10d[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[12d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[14dab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[15d[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[17d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output3[19dab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[20d[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[22d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output4[24dab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[25d[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[27d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output5[29dab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[30d[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[32d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output6[34dab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[35d[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[37d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output7[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[1;106H(B[0;7mModified(B[m[5;38r[38;1H
[1;41r[4;92H[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul$[38;1Hab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 450000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[4;92H[?12l[?25h[?25l[5d[?12l[?25h[?25l[6;89H[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[A[?12l[?25h[?25l[9;38r[38;1H
[1;41r[8;93H[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[38;1H[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[8;93H[?12l[?25h[?25l[9d[?12l[?25h[?25l[10;89H[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[13;38r[38;1H
[1;41r[12;93H[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[12;93H[?12l[?25h[?25l[13d[?12l[?25h[?25l[14;89H[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[17;38r[38;1H
[1;41r[16;94H[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[38;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output8[16;94H[?12l[?25h[?25l[17d[?12l[?25h[?25l[18;89H[?12l[?25h[?25l[39d[K[19d[?12l[?25h[?25l[20;94H[?12l[?25h[?25l[A[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[21;39r[39;1H
[1;41r[20;94H[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[20;94H[?12l[?25h[?25l[21d[?12l[?25h[?25l[22;89H[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25la[?12l[?25h[?25l[?12l[?25h[?25l[25d[?12l[?25h[?25l[25;39r[39;1H
[1;41r[24;94H[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[38;1H(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[24;94H[?12l[?25h[?25l[25d[?12l[?25h[?25l[26;89H[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[29;39r[39;1H
[1;41r[28;95H[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m re$[28;95H[?12l[?25h[?25l[30;89H[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[A[?12l[?25h[?25l[33;39r[39;1H
[1;41r[32;96H[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m r$[32;96H[?12l[?25h[?25l[33d[?12l[?25h[?25l[34;89H[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[39d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                      [40;1H Y(B[m Yes[K[41d(B[0;7m N(B[m No  [41;18H(B[0;7mC(B[m Cancel[K[39;63H[?12l[?25h[?25l[40d(B[0;7m^G(B[m Get Help[40;29H(B[0;7mM-D(B[m DOS Format[40;57H(B[0;7mM-A(B[m Append[40;85H(B[0;7mM-B(B[m Backup File[41d(B[0;7m^C(B[m Cancel[17G            (B[0;7mM-M(B[m Mac Format[41;57H(B[0;7mM-P(B[m Prepend[41;85H(B[0;7m^T(B[m To Files[39d(B[0;7mFile Name to Write: script.sh                                (B[m[39;30H[?12l[?25h[?25l[K[1;114H[1;106H(B[0;7m        (B[m[39;49H(B[0;7m[ Wrote 35 lines ](B[m[J[41;115H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script.sh sudo sh ./script.sh
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
apr_pollset_poll: The timeout specified has expired (70007)
Completed 2000 requests
Completed 4000 requests
Completed 6000 requests
Completed 8000 requests
Completed 10000 requests
Completed 12000 requests
Completed 14000 requests
Completed 16000 requests
Completed 18000 requests
apr_pollset_poll: The timeout specified has expired (70007)
Completed 3000 requests
Completed 6000 requests
Completed 9000 requests
Completed 12000 requests
Completed 15000 requests
Completed 18000 requests
Completed 21000 requests
Completed 24000 requests
Completed 27000 requests
apr_pollset_poll: The timeout specified has expired (70007)
^C
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sudo sh ./script.sh
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 2000 requests
Completed 4000 requests
Completed 6000 requests
Completed 8000 requests
Completed 10000 requests
Completed 12000 requests
Completed 14000 requests
Completed 16000 requests
Completed 18000 requests
apr_pollset_poll: The timeout specified has expired (70007)
Completed 3000 requests
Completed 6000 requests
Completed 9000 requests
Completed 12000 requests
Completed 15000 requests
Completed 18000 requests
Completed 21000 requests
Completed 24000 requests
Completed 27000 requests
apr_pollset_poll: The timeout specified has expired (70007)
Completed 45000 requests
Completed 90000 requests
Completed 135000 requests
Completed 180000 requests
Completed 225000 requests
Completed 270000 requests
Completed 315000 requests
Completed 360000 requests
Completed 405000 requests
Completed 450000 requests
Finished 450000 requests
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sudo sh ./script.sh[4Pnano script.sh 
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;50H(B[0;7m[ Reading File ](B[m[39;56H(B[0;7m 35 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                        script.sh                                                  [1;114H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul$[6;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output1[8dab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[10;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[12dab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[14;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output3[16dab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[18;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output4[20dab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[22;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output5[24dab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[26;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output6[28dab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m re$[30;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output7[32dab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 450000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m r$[34;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output8[36d(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[39d[K[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25la[?12l[?25h[?25lb[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25lp[?12l[?25h[?25l [?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25ly[?12l[?25h[?25ll[?12l[?25h[?25lo[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25l.[?12l[?25h[?25ljso[?12l[?25h[?25ln[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25lT[?12l[?25h[?25l [?12l[?25h[?25la[?12l[?25h[?25lp[?12l[?25h[?25lp[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25lc[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l/[?12l[?25h[?25lj[?12l[?25h[?25ls[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25lP[?12l[?25h[?25lO[?12l[?25h[?25lS[?12l[?25h[?25lT[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25lc[?12l[?25h[?25l [?12l[?25h[?25l1[?12l[?25h[?25l5[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l4[?12l[?25h[?25l5[?12l[?25h[?25l0[?12l[?25h[?25l[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l[1;106H(B[0;7mModified(B[m[32;65H [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m re[32;64H[?12l[?25h[?25l[39d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                      [40;1H Y(B[m Yes[K[41d(B[0;7m N(B[m No  [41;18H(B[0;7mC(B[m Cancel[K[39;63H[?12l[?25h[?25l[40d(B[0;7m^G(B[m Get Help[40;29H(B[0;7mM-D(B[m DOS Format[40;57H(B[0;7mM-A(B[m Append[40;85H(B[0;7mM-B(B[m Backup File[41d(B[0;7m^C(B[m Cancel[17G            (B[0;7mM-M(B[m Mac Format[41;57H(B[0;7mM-P(B[m Prepend[41;85H(B[0;7m^T(B[m To Files[39d(B[0;7mFile Name to Write: script.sh                                (B[m[39;30H[?12l[?25h[?25l[K[1;114H[1;106H(B[0;7m        (B[m[39;49H(B[0;7m[ Wrote 35 lines ](B[m[J[41;115H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script.sh sudo sh ./script.sh[1P[1P[1P[1P[1P
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 2000 requests
Completed 4000 requests
Completed 6000 requests
Completed 8000 requests
Completed 10000 requests
Completed 12000 requests
Completed 14000 requests
Completed 16000 requests
Completed 18000 requests
apr_pollset_poll: The timeout specified has expired (70007)
Completed 3000 requests
Completed 6000 requests
Completed 9000 requests
Completed 12000 requests
Completed 15000 requests
Completed 18000 requests
Completed 21000 requests
Completed 24000 requests
Completed 27000 requests
apr_pollset_poll: The timeout specified has expired (70007)
Completed 4500 requests
Completed 9000 requests
Completed 13500 requests
Completed 18000 requests
Completed 22500 requests
Completed 27000 requests
Completed 31500 requests
Completed 36000 requests
Completed 40500 requests
apr_pollset_poll: The timeout specified has expired (70007)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sh ./script.sh[Kcat newfile 
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ ls
Dockerfile  a_file        makefile  output1  output4  output7       result_fifty
LICENSE     [0m[01;32mfibonacci[0m     newfile   output2  output5  output8       script.sh
README.md   fibonacci.go  output    output3  output6  payload.json  typescript
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat result_fifty 
This is ApacheBench, Version 2.3 <$Revision: 1807734 $>
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking 35.185.241.145 (be patient)
Total of 41520 requests completed
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat output
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile 
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile [2Poutputresult_fifty ls[Kcat newfile sh ./script.shnano script.sh 
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;50H(B[0;7m[ Reading File ](B[m[39;56H(B[0;7m 35 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                        script.sh                                                  [1;114H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul$[6;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output1[8dab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[10;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[12dab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[14;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output3[16dab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[18;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output4[20dab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[22;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output5[24dab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[26;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output6[28dab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m re$[30;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output7[32dab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 45000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m re$[34;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output8[36d(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[3d[?12l[?25h[?25l[39d[J[41;115H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script.sh [C[1@1
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;52H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 2.9.3                                       script1.sh                                                  [1;114H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[3d[39;49m(B[m[?12l[?25h[?25l[1;106H(B[0;7mModified[39d(B[m[K[1;114H[3dab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[4;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output1[?12l[?25h[?25l[39d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                      [40;1H Y(B[m Yes[K[41d(B[0;7m N(B[m No  [41;18H(B[0;7mC(B[m Cancel[K[39;63H[?12l[?25h[?25l[40d(B[0;7m^G(B[m Get Help[40;29H(B[0;7mM-D(B[m DOS Format[40;57H(B[0;7mM-A(B[m Append[40;85H(B[0;7mM-B(B[m Backup File[41d(B[0;7m^C(B[m Cancel[17G            (B[0;7mM-M(B[m Mac Format[41;57H(B[0;7mM-P(B[m Prepend[41;85H(B[0;7m^T(B[m To Files[39d(B[0;7mFile Name to Write: script1.sh                               (B[m[39;31H[?12l[?25h[?25l[K[1;114H[1;106H(B[0;7m        (B[m[39;50H(B[0;7m[ Wrote 2 lines ](B[m[J[41;115H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script1.sh [1P[C[C[C[C
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;50H(B[0;7m[ Reading File ](B[m[39;56H(B[0;7m 35 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                        script.sh                                                  [1;114H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul$[6;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output1[8dab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[10;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[12dab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[14;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output3[16dab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[18;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output4[20dab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[22;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output5[24dab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m res$[26;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output6[28dab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m re$[30;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output7[32dab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 45000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m re$[34;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output8[36d(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[3d[?12l[?25h[?25l[39d[J[41;115H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script.sh [1@1[C[C[C[C
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;50H(B[0;7m[ Reading File ](B[m[39;56H(B[0;7m 2 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                       script1.sh                                                  [1;114H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[3d[39;49m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[4;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output1[A[?12l[?25h[?25l[1;106H(B[0;7mModified(B[m7[2;38r8[2dM[1;41r[4;1H[?12l[?25h[?25l[A[?12l[?25h[?25l[36m#!/bin/sh[39m(B[m[?12l[?25h[?25l[39d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                      [40;1H Y(B[m Yes[K[41d(B[0;7m N(B[m No  [41;18H(B[0;7mC(B[m Cancel[K[39;63H[?12l[?25h[?25l[40d(B[0;7m^G(B[m Get Help[40;29H(B[0;7mM-D(B[m DOS Format[40;57H(B[0;7mM-A(B[m Append[40;85H(B[0;7mM-B(B[m Backup File[41d(B[0;7m^C(B[m Cancel[17G            (B[0;7mM-M(B[m Mac Format[41;57H(B[0;7mM-P(B[m Prepend[41;85H(B[0;7m^T(B[m To Files[39d(B[0;7mFile Name to Write: script1.sh                               (B[m[39;31H[?12l[?25h[?25l[K[1;114H[1;106H(B[0;7m        (B[m[39;50H(B[0;7m[ Wrote 3 lines ](B[m[J[41;115H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script1.sh [1P[C[C[C[C[1@1[C[C[C[C[1P[C[C[C[C[3Pcat newfile[C[2Poutputresult_fifty ls[Kcat newfile sh ./script.sh1.sh
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat output1
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat output1sh ./script1.shnano script1.sh 
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;50H(B[0;7m[ Reading File ](B[m[39;56H(B[0;7m 3 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                       script1.sh                                                  [1;114H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output1[3d[?12l[?25h[?25l[4d[?12l[?25h[?25la[?12l[?25h[?25lb[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25lp[?12l[?25h[?25l [?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25ly[?12l[?25h[?25ll[?12l[?25h[?25lo[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25l.[?12l[?25h[?25lj[?12l[?25h[?25ls[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25lT[?12l[?25h[?25l [?12l[?25h[?25la[?12l[?25h[?25lp[?12l[?25h[?25l[39d[K[4;26H[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25lc[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l/[?12l[?25h[?25lj[?12l[?25h[?25ls[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25lP[?12l[?25h[?25lO[?12l[?25h[?25lS[?12l[?25h[?25lT[?12l[?25h[?25l [?12l[?25h[?25l-c [?12l[?25h[?25l5[?12l[?25h[?25l0[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l0[?12l[?25h[?25l[1;106H(B[0;7mModified(B[m[4;52H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l1 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[4;52H[39m(B[m[?12l[?25h[?25l0 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[4;53H[39m(B[m[?12l[?25h[?25l0 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[4;54H[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l1[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[5d[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25la[?12l[?25h[?25l_[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25lo[?12l[?25h[?25lu[?12l[?25h[?25lt[?12l[?25h[?25lp[?12l[?25h[?25lu[?12l[?25h[?25lt[?12l[?25h[?25l1[?12l[?25h[?25l [?12l[?25h[?25l2[?12l[?25h[?25l[39d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                      [40;1H Y(B[m Yes[K[41d(B[0;7m N(B[m No  [41;18H(B[0;7mC(B[m Cancel[K[39;63H[?12l[?25h[?25l[40d(B[0;7m^G(B[m Get Help[40;29H(B[0;7mM-D(B[m DOS Format[40;57H(B[0;7mM-A(B[m Append[40;85H(B[0;7mM-B(B[m Backup File[41d(B[0;7m^C(B[m Cancel[17G            (B[0;7mM-M(B[m Mac Format[41;57H(B[0;7mM-P(B[m Prepend[41;85H(B[0;7m^T(B[m To Files[39d(B[0;7mFile Name to Write: script1.sh                               (B[m[39;31H[?12l[?25h[?25l[K[1;114H[1;106H(B[0;7m        (B[m[39;50H(B[0;7m[ Wrote 3 lines ](B[m[J[41;115H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script1.sh [5Pcat output1sh ./script1.sh
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$  [Kcat output2
Concurrency Level:      50
Requests per second:    5214.77 [#/sec] (mean)
  98%     16
 100%     22 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat output2sh ./script1.shnano script1.sh 
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;50H(B[0;7m[ Reading File ](B[m[39;56H(B[0;7m 3 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                       script1.sh                                                  [1;114H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[5;1H(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[3d[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;41r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                       script1.sh                                                  [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[39;50H(B[0;7m[ Read 3 lines ][40d^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[3d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                       script1.sh                                                  [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resu$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d[1;56H(B[0;7m script1.sh[116G [1;115H(B[m[4dl[32m$[40;1H[39m(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[?25l[3d[?12l[?25h[?25l[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;41r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                        script1.sh                                                  [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[3d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                        script1.sh                                                  [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d[1;57H(B[0;7m script1.sh[117G  [1;117H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39d[?25l[3d[?12l[?25h[?25l[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;41r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                         script1.sh                                                   [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[3d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                         script1.sh                                                   [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d[1;58H(B[0;7m    script1.sh[119G        [1;125H(B[m[40d(B[0;7m^G(B[m Get Help    (B[0;7m^O(B[m Write Out   (B[0;7m^W(B[m Where Is    (B[0;7m^K(B[m Cut Text    (B[0;7m^J(B[m Justify     (B[0;7m^C(B[m Cur Pos     (B[0;7mM-U(B[m Undo[106G(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;16H(B[0;7m^R(B[m Read File   (B[0;7m^\(B[m Replace     (B[0;7m^U(B[m Uncut Text  (B[0;7m^T(B[m To Linter   (B[0;7m^_(B[m Go To Line  (B[0;7mM-E(B[m Redo[106G(B[0;7mM-6(B[m Copy Text[39d[?25l[3d[?12l[?25h[?25l[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;41r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                             script1.sh                                                       [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d(B[0;7m^G(B[m Get Help    (B[0;7m^O(B[m Write Out   (B[0;7m^W(B[m Where Is    (B[0;7m^K(B[m Cut Text    (B[0;7m^J(B[m Justify     (B[0;7m^C(B[m Cur Pos     (B[0;7mM-U(B[m Undo[106G(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;16H(B[0;7m^R(B[m Read File   (B[0;7m^\(B[m Replace     (B[0;7m^U(B[m Uncut Text  (B[0;7m^T(B[m To Linter   (B[0;7m^_(B[m Go To Line  (B[0;7mM-E(B[m Redo[106G(B[0;7mM-6(B[m Copy Text[3d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                             script1.sh                                                       [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d[1;62H(B[0;7m  script1.sh[127G     [1;130H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text[39d[?25l[3d[?12l[?25h[?25l[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;41r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                               script1.sh                                                          [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text[3d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                               script1.sh                                                          [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d[1;64H(B[0;7m  script1.sh[132G    [1;134H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text[39d[?25l[3d[?12l[?25h[?25l[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;41r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                                 script1.sh                                                            [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text[3d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                                 script1.sh                                                            [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d[1;66H(B[0;7m script1.sh[136G [1;135H(B[m[40d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[40;120H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Uncut Text    (B[0;7m^T(B[m To Linter     (B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[41;120H(B[0;7mM-6(B[m Copy Text[39d[?25l[3d[?12l[?25h[?25l[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;41r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                                  script1.sh                                                            [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[40;120H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Uncut Text    (B[0;7m^T(B[m To Linter     (B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[41;120H(B[0;7mM-6(B[m Copy Text[3d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                                  script1.sh                                                            [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d[1;67H(B[0;7m  script1.sh[137G     [1;140H(B[m[40d(B[0;7m^G(B[m Get Help    (B[0;7m^O(B[m Write Out   (B[0;7m^W(B[m Where Is    (B[0;7m^K(B[m Cut Text    (B[0;7m^J(B[m Justify     (B[0;7m^C(B[m Cur Pos     (B[0;7mM-U(B[m Undo[106G(B[0;7mM-A(B[m Mark Text  (B[0;7mM-](B[m To Bracket[41d(B[0;7m^X(B[m Exit[41;16H(B[0;7m^R(B[m Read File   (B[0;7m^\(B[m Replace     (B[0;7m^U(B[m Uncut Text  (B[0;7m^T(B[m To Linter   (B[0;7m^_(B[m Go To Line  (B[0;7mM-E(B[m Redo[106G(B[0;7mM-6(B[m Copy Text  (B[0;7mM-W(B[m WhereIs Next[39d[?25l[3d[?12l[?25h[?25l[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;41r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                                    script1.sh                                                               [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d(B[0;7m^G(B[m Get Help    (B[0;7m^O(B[m Write Out   (B[0;7m^W(B[m Where Is    (B[0;7m^K(B[m Cut Text    (B[0;7m^J(B[m Justify     (B[0;7m^C(B[m Cur Pos     (B[0;7mM-U(B[m Undo[106G(B[0;7mM-A(B[m Mark Text  (B[0;7mM-](B[m To Bracket[41d(B[0;7m^X(B[m Exit[41;16H(B[0;7m^R(B[m Read File   (B[0;7m^\(B[m Replace     (B[0;7m^U(B[m Uncut Text  (B[0;7m^T(B[m To Linter   (B[0;7m^_(B[m Go To Line  (B[0;7mM-E(B[m Redo[106G(B[0;7mM-6(B[m Copy Text  (B[0;7mM-W(B[m WhereIs Next[3d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                                    script1.sh                                                               [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d[1;69H(B[0;7m script1.sh[142G [1;141H(B[m[40d(B[0;7m^G(B[m Get Help    (B[0;7m^O(B[m Write Out   (B[0;7m^W(B[m Where Is    (B[0;7m^K(B[m Cut Text    (B[0;7m^J(B[m Justify     (B[0;7m^C(B[m Cur Pos     (B[0;7mM-U(B[m Undo[106G(B[0;7mM-A(B[m Mark Text  (B[0;7mM-](B[m To Bracket[41d(B[0;7m^X(B[m Exit[41;16H(B[0;7m^R(B[m Read File   (B[0;7m^\(B[m Replace     (B[0;7m^U(B[m Uncut Text  (B[0;7m^T(B[m To Linter   (B[0;7m^_(B[m Go To Line  (B[0;7mM-E(B[m Redo[106G(B[0;7mM-6(B[m Copy Text  (B[0;7mM-W(B[m WhereIs Next[39d[?25l[3d[?12l[?25h[?25l[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;41r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                                     script1.sh                                                               [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d(B[0;7m^G(B[m Get Help    (B[0;7m^O(B[m Write Out   (B[0;7m^W(B[m Where Is    (B[0;7m^K(B[m Cut Text    (B[0;7m^J(B[m Justify     (B[0;7m^C(B[m Cur Pos     (B[0;7mM-U(B[m Undo[106G(B[0;7mM-A(B[m Mark Text  (B[0;7mM-](B[m To Bracket[41d(B[0;7m^X(B[m Exit[41;16H(B[0;7m^R(B[m Read File   (B[0;7m^\(B[m Replace     (B[0;7m^U(B[m Uncut Text  (B[0;7m^T(B[m To Linter   (B[0;7m^_(B[m Go To Line  (B[0;7mM-E(B[m Redo[106G(B[0;7mM-6(B[m Copy Text  (B[0;7mM-W(B[m WhereIs Next[3d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                                     script1.sh                                                               [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d[1;70H(B[0;7m script1.sh[143G   [1;144H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[39d[?25l[3d[?12l[?25h[?25l[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;41r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                                      script1.sh                                                                 [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[3d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                                      script1.sh                                                                 [3d(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m resul[32m$[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[40d[1;71H(B[0;7m  script1.sh[146G    [1;148H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[39d[?25l[3d[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[4d[?12l[?25h[?25la[?12l[?25h[?25l[5d[?12l[?25h[?25l[40d[J[41;149H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script1.sh [5Pcat output2sh ./script1.sh[1P.sh
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
^XCompleted 6000 requests
Completed 7000 requests
^C
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sh ./script.shnano script1.sh [5Pcat output2sh ./script1.shnano script1.sh [5Pcat output1sh ./script1.shnano script1.sh [1P[C[C[C[C
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;67H(B[0;7m[ Reading File ](B[m[39;73H(B[0;7m 35 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                         script.sh                                                                   [1;148H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[6d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output1[8dab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[10d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output2[12dab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[14d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output3[16dab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[18d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output4[20dab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[22d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output5[24dab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[26d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output6[28dab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[30d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output7[32dab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 45000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result_fifty[34d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m a_file [32m>[39m(B[m output8[36d(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[A[?12l[?25h[?25l[4;122H[?12l[?25h[?25l[5d[?12l[?25h[?25l[6;89H[?12l[?25h[?25l[A[?12l[?25h[?25l[4;122H[?12l[?25h[?25l[1;140H(B[0;7mModified(B[m[4;121H [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l1[?12l[?25h[?25l[5d[?12l[?25h[?25l[6;89H[?12l[?25h[?25l[7d[?12l[?25h[?25l[8;117H[?12l[?25h[?25l_[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lf[?12l[?25h[?25lt[?12l[?25h[?25l[39d[K[8;123H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l2[?12l[?25h[?25l[9d[?12l[?25h[?25l[10;89H[?12l[?25h[?25l[11d[?12l[?25h[?25l[12;118H[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lf[?12l[?25h[?25lt[?12l[?25h[?25ly[?12l[?25h[?25l[13d[?12l[?25h[?25l[12;123H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l3[?12l[?25h[?25l[13d[?12l[?25h[?25l[14;89H[?12l[?25h[?25l[15d[?12l[?25h[?25l[16;118H[?12l[?25h[?25l[17d[?12l[?25h[?25l[16;124H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l4[?12l[?25h[?25l[17d[?12l[?25h[?25l[18;89H[?12l[?25h[?25l[19d[?12l[?25h[?25l[20;119H[?12l[?25h[?25l[21d[?12l[?25h[?25l[20;124H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l5[?12l[?25h[?25l[21d[?12l[?25h[?25l[22;89H[?12l[?25h[?25l[23d[?12l[?25h[?25l[24;119H[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lf[?12l[?25h[?25lt[?12l[?25h[?25ly[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l6[?12l[?25h[?25l[25d[?12l[?25h[?25l[26;89H[?12l[?25h[?25l[27d[?12l[?25h[?25l[28;119H[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[A[?12l[?25h[?25l[28;125H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l7[?12l[?25h[?25l[29d[?12l[?25h[?25l[30;89H[?12l[?25h[?25l[31d[?12l[?25h[?25l[32;120H[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lf[?12l[?25h[?25lt[?12l[?25h[?25ly[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l8[?12l[?25h[?25l[A[?12l[?25h[?25l[30;89H[?12l[?25h[?25l[A[?12l[?25h[?25l[28;120H[?12l[?25h[?25l[A[?12l[?25h[?25l[26;89H[?12l[?25h[?25l[A[?12l[?25h[?25l[24;119H[?12l[?25h[?25l[A[?12l[?25h[?25l[22;89H[?12l[?25h[?25l[A[?12l[?25h[?25l[20;119H[?12l[?25h[?25l[A[?12l[?25h[?25l[18;89H[?12l[?25h[?25l[A[?12l[?25h[?25l[16;119H[?12l[?25h[?25l[A[?12l[?25h[?25l[14;89H[?12l[?25h[?25l[A[?12l[?25h[?25l[12;118H[?12l[?25h[?25l[A[?12l[?25h[?25l[10;89H[?12l[?25h[?25l[A[?12l[?25h[?25l[8;118H[?12l[?25h[?25l[A[?12l[?25h[?25l[6;89H[?12l[?25h[?25l[A[?12l[?25h[?25l[6;89H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25le[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lr [32m>[39m(B[m output1[6;74H[?12l[?25h[?25le [32m>[39m(B[m output1[6;75H[?12l[?25h[?25ls [32m>[39m(B[m output1[6;76H[?12l[?25h[?25lu [32m>[39m(B[m output1[6;77H[?12l[?25h[?25ll [32m>[39m(B[m output1[6;78H[?12l[?25h[?25lt [32m>[39m(B[m output1[6;79H[?12l[?25h[?25l1 [32m>[39m(B[m output1[6;80H[?12l[?25h[?25l[7d[?12l[?25h[?25l[8;80H[?12l[?25h[?25l[9d[?12l[?25h[?25l[10;80H[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lr [32m>[39m(B[m output2[10;74H[?12l[?25h[?25le [32m>[39m(B[m output2[10;75H[?12l[?25h[?25lt [32m>[39m(B[m output2[10;76H[?12l[?25h[?25lu [32m>[39m(B[m output2[10;77H[?12l[?25h[?25ll [32m>[39m(B[m output2[10;78H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25ls [32m>[39m(B[m output2[10;76H[?12l[?25h[?25lu [32m>[39m(B[m output2[10;77H[?12l[?25h[?25ll [32m>[39m(B[m output2[10;78H[?12l[?25h[?25lt [32m>[39m(B[m output2[10;79H[?12l[?25h[?25l2 [32m>[39m(B[m output2[10;80H[?12l[?25h[?25l[11d[?12l[?25h[?25l[12;80H[?12l[?25h[?25l[13d[?12l[?25h[?25l[14;80H[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lr [32m>[39m(B[m output3[14;74H[?12l[?25h[?25le [32m>[39m(B[m output3[14;75H[?12l[?25h[?25ls [32m>[39m(B[m output3[14;76H[?12l[?25h[?25lu [32m>[39m(B[m output3[14;77H[?12l[?25h[?25ll [32m>[39m(B[m output3[14;78H[?12l[?25h[?25lt [32m>[39m(B[m output3[14;79H[?12l[?25h[?25l3 [32m>[39m(B[m output3[14;80H[?12l[?25h[?25l[15d[?12l[?25h[?25l[16;80H[?12l[?25h[?25l[17d[?12l[?25h[?25l[18;80H[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lr [32m>[39m(B[m output4[18;74H[?12l[?25h[?25ls [32m>[39m(B[m output4[18;75H[?12l[?25h[?25l[1P[?12l[?25h[?25le [32m>[39m(B[m output4[18;75H[?12l[?25h[?25ls [32m>[39m(B[m output4[18;76H[?12l[?25h[?25lu [32m>[39m(B[m output4[18;77H[?12l[?25h[?25ll [32m>[39m(B[m output4[18;78H[?12l[?25h[?25lt [32m>[39m(B[m output4[18;79H[?12l[?25h[?25l4 [32m>[39m(B[m output4[18;80H[?12l[?25h[?25l[19d[?12l[?25h[?25l[20;80H[?12l[?25h[?25l[21d[?12l[?25h[?25l[22;80H[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lr [32m>[39m(B[m output5[22;74H[?12l[?25h[?25le [32m>[39m(B[m output5[22;75H[?12l[?25h[?25ls [32m>[39m(B[m output5[22;76H[?12l[?25h[?25lu [32m>[39m(B[m output5[22;77H[?12l[?25h[?25ll [32m>[39m(B[m output5[22;78H[?12l[?25h[?25lt [32m>[39m(B[m output5[22;79H[?12l[?25h[?25l5 [32m>[39m(B[m output5[22;80H[?12l[?25h[?25l[23d[?12l[?25h[?25l[24;80H[?12l[?25h[?25l[25d[?12l[?25h[?25l[26;80H[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lr [32m>[39m(B[m output6[26;74H[?12l[?25h[?25le [32m>[39m(B[m output6[26;75H[?12l[?25h[?25ls [32m>[39m(B[m output6[26;76H[?12l[?25h[?25lu [32m>[39m(B[m output6[26;77H[?12l[?25h[?25ll [32m>[39m(B[m output6[26;78H[?12l[?25h[?25lt [32m>[39m(B[m output6[26;79H[?12l[?25h[?25l6 [32m>[39m(B[m output6[26;80H[?12l[?25h[?25l[27d[?12l[?25h[?25l[28;80H[?12l[?25h[?25l[29d[?12l[?25h[?25l[30;80H[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lr [32m>[39m(B[m output7[30;74H[?12l[?25h[?25le [32m>[39m(B[m output7[30;75H[?12l[?25h[?25ls [32m>[39m(B[m output7[30;76H[?12l[?25h[?25lu [32m>[39m(B[m output7[30;77H[?12l[?25h[?25ll [32m>[39m(B[m output7[30;78H[?12l[?25h[?25lt [32m>[39m(B[m output7[30;79H[?12l[?25h[?25l7 [32m>[39m(B[m output7[30;80H[?12l[?25h[?25l[31d[?12l[?25h[?25l[32;80H[?12l[?25h[?25l[33d[?12l[?25h[?25l[34;80H[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[2P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lr [32m>[39m(B[m output8[34;74H[?12l[?25h[?25le [32m>[39m(B[m output8[34;75H[?12l[?25h[?25ls [32m>[39m(B[m output8[34;76H[?12l[?25h[?25lu [32m>[39m(B[m output8[34;77H[?12l[?25h[?25ll [32m>[39m(B[m output8[34;78H[?12l[?25h[?25lt [32m>[39m(B[m output8[34;79H[?12l[?25h[?25l8 [32m>[39m(B[m output8[34;80H[?12l[?25h[?25l[39d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                        [40;1H Y(B[m Yes[K[41d(B[0;7m N(B[m No  [41;18H(B[0;7mC(B[m Cancel[K[39;63H[?12l[?25h[?25l[40d(B[0;7m^G(B[m Get Help[40;38H(B[0;7mM-D(B[m DOS Format[40;75H(B[0;7mM-A(B[m Append[40;112H(B[0;7mM-B(B[m Backup File[41d(B[0;7m^C(B[m Cancel[17G         [41;38H(B[0;7mM-M(B[m Mac Format[41;75H(B[0;7mM-P(B[m Prepend[41;112H(B[0;7m^T(B[m To Files[39d(B[0;7mFile Name to Write: script.sh                                (B[m[39;30H[?12l[?25h[?25l[K[1;148H[1;140H(B[0;7m        (B[m[39;66H(B[0;7m[ Wrote 35 lines ](B[m[J[41;149H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script.sh [1Psh ./script.shnano script1.sh [2Psh ./script.sh
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 2000 requests
Completed 4000 requests
Completed 6000 requests
Completed 8000 requests
Completed 10000 requests
Completed 12000 requests
Completed 14000 requests
Completed 16000 requests
Completed 18000 requests
apr_pollset_poll: The timeout specified has expired (70007)
Completed 3000 requests
Completed 6000 requests
Completed 9000 requests
Completed 12000 requests
Completed 15000 requests
Completed 18000 requests
Completed 21000 requests
Completed 24000 requests
Completed 27000 requests
apr_pollset_poll: The timeout specified has expired (70007)
Completed 4500 requests
Completed 9000 requests
Completed 13500 requests
Completed 18000 requests
Completed 22500 requests
Completed 27000 requests
Completed 31500 requests
Completed 36000 requests
Completed 40500 requests
apr_pollset_poll: The timeout specified has expired (70007)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat output[K[K[K[K[K[Knewfile 
Concurrency Level:      50
Requests per second:    5292.42 [#/sec] (mean)
  98%     16
 100%     29 (longest request)
Concurrency Level:      100
Requests per second:    4988.98 [#/sec] (mean)
  98%     27
 100%     46 (longest request)
Concurrency Level:      500
Requests per second:    4570.10 [#/sec] (mean)
  98%   1041
 100%   1326 (longest request)
Concurrency Level:      1000
Requests per second:    3607.89 [#/sec] (mean)
  98%   1515
 100%   2759 (longest request)
Concurrency Level:      2000
Requests per second:    3581.70 [#/sec] (mean)
  98%   1541
 100%   2785 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ [K]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ [K]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ [K]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ [K]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ [K]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile sh ./script.shnano script.sh 
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[49m(B[m[H[2J[39;58H(B[0;7m[ Reading File ](B[m[39;57H(B[0;7m[ Read 35 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                               script.sh                                                          [1;129H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result1[6d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result1 [32m>[39m(B[m output1[8dab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result2[10d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result2 [32m>[39m(B[m output2[12dab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result3[14d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result3 [32m>[39m(B[m output3[16dab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result4[18d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result4 [32m>[39m(B[m output4[20dab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result5[22d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result5 [32m>[39m(B[m output5[24dab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result6[26d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result6 [32m>[39m(B[m output6[28dab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result7[30d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result7 [32m>[39m(B[m output7[32dab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 45000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result8[34d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result8 [32m>[39m(B[m output8[36d(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[1;121H(B[0;7mModified(B[m[5;38r[38;1H
[1;41r[5;1H[?12l[?25h[?25l[5;38r[38;1H
[1;41r[4;117Hgrep -E (B[0;1m[33m'Conc[39m(B[m$[4;117H[?12l[?25h[?25l (B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Con[4;118H[39m(B[m[?12l[?25h[?25l[32m&(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Co[4;119H[39m(B[m[?12l[?25h[?25l[32m&(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'C[4;120H[39m(B[m[?12l[?25h[?25l (B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'[4;121H[39m(B[m[?12l[?25h[?25l[32m\(B[0;1m[34mgrep[39m(B[m -E [4;122H[?12l[?25h[?25l7[5;38r8[5dM[1;41r[4;122H[K[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result1 [32m>[39m(B[m output1[?12l[?25h[?25l[39d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                     [40;1H Y(B[m Yes[K[41d(B[0;7m N(B[m No  [41;18H(B[0;7mC(B[m Cancel[K[39;63H[?12l[?25h[?25l[40d(B[0;7m^G(B[m Get Help[40;33H(B[0;7mM-D(B[m DOS Format[40;65H(B[0;7mM-A(B[m Append[40;97H(B[0;7mM-B(B[m Backup File[41d(B[0;7m^C(B[m Cancel[17G         [33G(B[0;7mM-M(B[m Mac Format[41;65H(B[0;7mM-P(B[m Prepend[41;97H(B[0;7m^T(B[m To Files[39d(B[0;7mFile Name to Write: script.sh                                (B[m[39;30H[?12l[?25h[?25l[K[1;129H[1;121H(B[0;7m        (B[m[39;57H(B[0;7m[ Wrote 34 lines ](B[m[J[41;130H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script.sh [3Pcat newfile[C
Concurrency Level:      50
Requests per second:    5292.42 [#/sec] (mean)
  98%     16
 100%     29 (longest request)
Concurrency Level:      100
Requests per second:    4988.98 [#/sec] (mean)
  98%     27
 100%     46 (longest request)
Concurrency Level:      500
Requests per second:    4570.10 [#/sec] (mean)
  98%   1041
 100%   1326 (longest request)
Concurrency Level:      1000
Requests per second:    3607.89 [#/sec] (mean)
  98%   1515
 100%   2759 (longest request)
Concurrency Level:      2000
Requests per second:    3581.70 [#/sec] (mean)
  98%   1541
 100%   2785 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile [3@nano script.sh[C[3Pcat newfile[C[3@nano script.sh[C[3Pcat newfile[Csh ./script.sh
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
^XCompleted 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
^C
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sh ./script.sh[2Pcat newfile [3@nano script.sh[C
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[49m(B[m[H[2J[39;58H(B[0;7m[ Reading File ](B[m[39;57H(B[0;7m[ Read 34 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                               script.sh                                                          [1;129H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result1 [32m&&[39m(B[m [32m\[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result1 [32m>[39m(B[m output1[7dab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result2[9d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result2 [32m>[39m(B[m output2[11dab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result3[13d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result3 [32m>[39m(B[m output3[15dab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result4[17d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result4 [32m>[39m(B[m output4[19dab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result5[21d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result5 [32m>[39m(B[m output5[23dab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result6[25d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result6 [32m>[39m(B[m output6[27dab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result7[29d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result7 [32m>[39m(B[m output7[31dab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 45000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result8[33d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result8 [32m>[39m(B[m output8[35d(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[1;121H(B[0;7mModified(B[m[8;38r[38;1H
[1;41r[8;1H[?12l[?25h[?25l[8;38r[38;1H
[1;41r[7;118Hgrep -E (B[0;1m[33m'Con[39m(B[m$[7;118H[?12l[?25h[?25l (B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Co[7;119H[39m(B[m[?12l[?25h[?25l[32m&(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'C[7;120H[39m(B[m[?12l[?25h[?25l[32m&(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'[7;121H[39m(B[m[?12l[?25h[?25l (B[0;1m[34mgrep[39m(B[m -E [7;122H[?12l[?25h[?25l[32m\(B[0;1m[34mgrep[39m(B[m -E[123G[?12l[?25h[?25l7[8;38r8[8dM[1;41r[7;123H[K[8d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result2 [32m>[39m(B[m output2[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[39d[K[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[11;39r[39;1H
[1;41r[11;1H[?12l[?25h[?25l[11;39r[39;1H
[1;41r[10;118Hgrep -E (B[0;1m[33m'Con[39m(B[m$[10;118H[?12l[?25h[?25l7[11;39r8[11dM[1;41r[10;118H [32m&&[39m(B[m [32m\[39m(B[m[K[11d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result3 [32m>[39m(B[m output3[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[14;39r[39;1H
[1;41r[14;1H[?12l[?25h[?25l[14;39r[39;1H
[1;41r[13;119Hgrep -E (B[0;1m[33m'Co[39m(B[m$[13;119H[?12l[?25h[?25l7[14;39r8[14dM[1;41r[13;119H [32m&&[39m(B[m [32m\[39m(B[m[K[14d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result4 [32m>[39m(B[m output4[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[17;39r[39;1H
[1;41r[17;1H[?12l[?25h[?25l[17;39r[39;1H
[1;41r[16;119Hgrep -E (B[0;1m[33m'Co[39m(B[m$[16;119H[?12l[?25h[?25l7[17;39r8[17dM[1;41r[16;119H [32m&&[39m(B[m [32m\[39m(B[m[K[17d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result5 [32m>[39m(B[m output5[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[20;39r[39;1H
[1;41r[20;1H[?12l[?25h[?25l[20;39r[39;1H
[1;41r[19;119Hgrep -E (B[0;1m[33m'Co[39m(B[m$[19;119H[?12l[?25h[?25l7[20;39r8[20dM[1;41r[19;119H [32m&&[39m(B[m [32m\[39m(B[m[K[20d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result6 [32m>[39m(B[m output6[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[23;39r[39;1H
[1;41r[23;1H[?12l[?25h[?25l[23;39r[39;1H
[1;41r[22;120Hgrep -E (B[0;1m[33m'C[39m(B[m$[22;120H[?12l[?25h[?25l7[23;39r8[23dM[1;41r[22;120H [32m&&[39m(B[m [32m\[39m(B[m[K[23d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result7 [32m>[39m(B[m output7[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[26;39r[39;1H
[1;41r[26;1H[?12l[?25h[?25l[26;39r[39;1H
[1;41r[25;120Hgrep -E (B[0;1m[33m'C[39m(B[m$[25;120H[?12l[?25h[?25l7[26;39r8[26dM[1;41r[25;120H [32m&&[39m(B[m [32m\[39m(B[m[K[26d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result8 [32m>[39m(B[m output8[?12l[?25h[?25l[39d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                     [40;1H Y(B[m Yes[K[41d(B[0;7m N(B[m No  [41;18H(B[0;7mC(B[m Cancel[K[39;63H[?12l[?25h[?25l[40d(B[0;7m^G(B[m Get Help[40;33H(B[0;7mM-D(B[m DOS Format[40;65H(B[0;7mM-A(B[m Append[40;97H(B[0;7mM-B(B[m Backup File[41d(B[0;7m^C(B[m Cancel[17G         [33G(B[0;7mM-M(B[m Mac Format[41;65H(B[0;7mM-P(B[m Prepend[41;97H(B[0;7m^T(B[m To Files[39d(B[0;7mFile Name to Write: script.sh                                (B[m[39;30H[?12l[?25h[?25l[K[1;129H[1;121H(B[0;7m        (B[m[39;57H(B[0;7m[ Wrote 27 lines ](B[m[J[41;130H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script.sh [1Psh ./script.sh[2Pcat newfile sh ./script.sh
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 1000 requests
Completed 2000 requests
Completed 3000 requests
Completed 4000 requests
Completed 5000 requests
Completed 6000 requests
Completed 7000 requests
Completed 8000 requests
Completed 9000 requests
Completed 10000 requests
Finished 10000 requests
Completed 2000 requests
Completed 4000 requests
Completed 6000 requests
Completed 8000 requests
Completed 10000 requests
Completed 12000 requests
Completed 14000 requests
Completed 16000 requests
Completed 18000 requests
apr_pollset_poll: The timeout specified has expired (70007)
Completed 3000 requests
Completed 6000 requests
Completed 9000 requests
Completed 12000 requests
Completed 15000 requests
Completed 18000 requests
Completed 21000 requests
Completed 24000 requests
Completed 27000 requests
apr_pollset_poll: The timeout specified has expired (70007)
Completed 4500 requests
Completed 9000 requests
Completed 13500 requests
Completed 18000 requests
Completed 22500 requests
Completed 27000 requests
Completed 31500 requests
Completed 36000 requests
Completed 40500 requests
apr_pollset_poll: The timeout specified has expired (70007)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ sh ./script.shnano script.sh [1Psh ./script.sh[2Pcat newfile 
Concurrency Level:      50
Requests per second:    4819.43 [#/sec] (mean)
  98%     18
 100%     57 (longest request)
Concurrency Level:      100
Requests per second:    5085.30 [#/sec] (mean)
  98%     28
 100%     46 (longest request)
Concurrency Level:      500
Requests per second:    4453.16 [#/sec] (mean)
  98%   1071
 100%   1469 (longest request)
Concurrency Level:      1000
Requests per second:    3619.32 [#/sec] (mean)
  98%   1474
 100%   2759 (longest request)
Concurrency Level:      2000
Requests per second:    3556.71 [#/sec] (mean)
  98%   1928
 100%   2795 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile sh ./script.shnano script.sh 
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[49m(B[m[H[2J[39;58H(B[0;7m[ Reading File ](B[m[39;57H(B[0;7m[ Read 27 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                               script.sh                                                          [1;129H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result1 [32m&&[39m(B[m [32m\[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result1 [32m>[39m(B[m output1[7dab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result2 [32m&&[39m(B[m [32m\[8d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result2 [32m>[39m(B[m output2[10dab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result3 [32m&&[39m(B[m [32m\[11d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result3 [32m>[39m(B[m output3[13dab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result4 [32m&&[39m(B[m [32m\[14d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result4 [32m>[39m(B[m output4[16dab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result5 [32m&&[39m(B[m [32m\[17d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result5 [32m>[39m(B[m output5[19dab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result6 [32m&&[39m(B[m [32m\[20d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result6 [32m>[39m(B[m output6[22dab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result7 [32m&&[39m(B[m [32m\[23d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result7 [32m>[39m(B[m output7[25dab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 45000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result8 [32m&&[39m(B[m [32m\[26d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result8 [32m>[39m(B[m output8[28d(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[3d[?12l[?25h[?25l[39d[J[41;130H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script.sh [K
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ ab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6 && \
> grep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' result6 > output6^C
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ ab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6 && \^C
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ ab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci [A
This is ApacheBench, Version 2.3 <$Revision: 1807734 $>
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking 35.185.241.145 (be patient)
Completed 2000 requests
Completed 4000 requests
Completed 6000 requests
Completed 8000 requests
Completed 10000 requests
Completed 12000 requests
Completed 14000 requests
Completed 16000 requests
Completed 18000 requests
Completed 20000 requests
Finished 20000 requests


Server Software:        
Server Hostname:        35.185.241.145
Server Port:            8080

Document Path:          /fibonacci
Document Length:        36 bytes

Concurrency Level:      5000
Time taken for tests:   8.142 seconds
Complete requests:      20000
Failed requests:        0
Total transferred:      2880000 bytes
Total body sent:        3480000
HTML transferred:       720000 bytes
Requests per second:    2456.37 [#/sec] (mean)
Time per request:       2035.522 [ms] (mean)
Time per request:       0.407 [ms] (mean, across all concurrent requests)
Transfer rate:          345.43 [Kbytes/sec] received
                        417.39 kb/s sent
                        762.82 kb/s total

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0  477 804.1      1    3066
Processing:     0  329 886.2     49    7102
Waiting:        0  329 886.2     49    7102
Total:          1  806 1303.6     75    8129

Percentage of the requests served within a certain time (ms)
  50%     75
  66%   1043
  75%   1092
  80%   1301
  90%   2803
  95%   3555
  98%   4776
  99%   6464
 100%   8129 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$  > result6ab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6 && \[A]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script.sh [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6 && \[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C > result6[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6 && \[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C > result6[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6 && \[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C > result6[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[Knano script.sh 
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;58H(B[0;7m[ Reading File ](B[m[39;57H(B[0;7m[ Read 27 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                               script.sh                                                          [1;129H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result1 [32m&&[39m(B[m [32m\[5d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result1 [32m>[39m(B[m output1[7dab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result2 [32m&&[39m(B[m [32m\[8d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result2 [32m>[39m(B[m output2[10dab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result3 [32m&&[39m(B[m [32m\[11d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result3 [32m>[39m(B[m output3[13dab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result4 [32m&&[39m(B[m [32m\[14d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result4 [32m>[39m(B[m output4[16dab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result5 [32m&&[39m(B[m [32m\[17d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result5 [32m>[39m(B[m output5[19dab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result6 [32m&&[39m(B[m [32m\[20d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result6 [32m>[39m(B[m output6[22dab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result7 [32m&&[39m(B[m [32m\[23d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result7 [32m>[39m(B[m output7[25dab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 45000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result8 [32m&&[39m(B[m [32m\[26d(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result8 [32m>[39m(B[m output8[28d(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[1;121H(B[0;7mModified(B[m[5;38r[38;1H
[1;41r[4;122H(B[0;1m[34mgrep[39m(B[m -E $[4;122H[?12l[?25h[?25l(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'[4;121H[39m(B[m[?12l[?25h[?25l[5d[?12l[?25h[?25l[6;121H[?12l[?25h[?25l[7;90H[?12l[?25h[?25l[8d[?12l[?25h[?25l[7;90H[?12l[?25h[?25l[6;121H[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[7d[?12l[?25h[?25l[7;38r[38;1H
[1;41r[6;123H(B[0;1m[34mgrep[39m(B[m -E$[6;123H[?12l[?25h[?25l(B[0;1m[34mgrep[39m(B[m -E [6;122H[?12l[?25h[?25l[7d[?12l[?25h[?25l[8;122H[?12l[?25h[?25l[C[?12l[?25h[?25l[9d[?12l[?25h[?25l[9;38r[38;1H
[1;41r[8;123H(B[0;1m[34mgrep[39m(B[m -E$[8;123H[?12l[?25h[?25l(B[0;1m[34mgrep[39m(B[m -E [8;122H[?12l[?25h[?25l[9d[?12l[?25h[?25l[10;122H[?12l[?25h[?25l[11;90H[?12l[?25h[?25l[10;122H[?12l[?25h[?25l[39d[K[10;123H[?12l[?25h[?25l[C[?12l[?25h[?25l[11d[?12l[?25h[?25l[11;39r[39;1H
[1;41r[10;124H(B[0;1m[34mgrep[39m(B[m -$[10;124H[?12l[?25h[?25l(B[0;1m[34mgrep[39m(B[m -E[123G[?12l[?25h[?25l[11d[?12l[?25h[?25l[12;123H[?12l[?25h[?25l[13;90H[?12l[?25h[?25l[14d[?12l[?25h[?25l[13;90H[?12l[?25h[?25l[12;123H[?12l[?25h[?25l[C[?12l[?25h[?25l[13d[?12l[?25h[?25l[13;39r[39;1H
[1;41r[12;124H(B[0;1m[34mgrep[39m(B[m -$[12;124H[?12l[?25h[?25l(B[0;1m[34mgrep[39m(B[m -E[123G[?12l[?25h[?25l[13d[?12l[?25h[?25l[14;123H[?12l[?25h[?25l[C[?12l[?25h[?25l[15d[?12l[?25h[?25l[15;39r[39;1H
[1;41r[14;124H(B[0;1m[34mgrep[39m(B[m -$[14;124H[?12l[?25h[?25l(B[0;1m[34mgrep[39m(B[m -E[123G[?12l[?25h[?25l[15d[?12l[?25h[?25l[16;123H[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[42m [49m(B[m[K[?12l[?25h[?25l [?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l[17d[?12l[?25h[?25l[17;39r[39;1H
[1;41r[16;123H (B[0;1m[34mgrep[39m(B[m -$[16;124H[?12l[?25h[?25l[17d[?12l[?25h[?25l[18;124H[?12l[?25h[?25l[19;90H[?12l[?25h[?25l[20d[?12l[?25h[?25l[19;90H[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[18;125H[?12l[?25h[?25l[19d[?12l[?25h[?25l[19;39r[39;1H
[1;41r[18;125H(B[0;1m[34mgrep[39m(B[m $[18;125H[?12l[?25h[?25l(B[0;1m[34mgrep[39m(B[m -[124G[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l$(B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'Concurrency Level:|Requests per second:|(longest request)|98%'[39m(B[m result8 [32m>[39m(B[m output8[K[8G[?12l[?25h[?25lE[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[39d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                     [40;1H Y(B[m Yes[K[41d(B[0;7m N(B[m No  [41;18H(B[0;7mC(B[m Cancel[K[39;63H[?12l[?25h[?25l[40d(B[0;7m^G(B[m Get Help[40;33H(B[0;7mM-D(B[m DOS Format[40;65H(B[0;7mM-A(B[m Append[40;97H(B[0;7mM-B(B[m Backup File[41d(B[0;7m^C(B[m Cancel[17G         [33G(B[0;7mM-M(B[m Mac Format[41;65H(B[0;7mM-P(B[m Prepend[41;97H(B[0;7m^T(B[m To Files[39d(B[0;7mFile Name to Write: script.sh                                (B[m[39;30H[?12l[?25h[?25l[K[1;129H[1;121H(B[0;7m        (B[m[39;57H(B[0;7m[ Wrote 19 lines ](B[m[J[41;130H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ grep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' result8 > output8[K6[C[1P[1@6
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ new[K[K[Kgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' result6 > output6[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano script.sh [Kab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6 && \[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano script.sh [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' result6 > output6[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' result6 > output6[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano script.sh [K
[?1049h[22;0;0t[1;41r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[39;58H(B[0;7m[ Reading File ](B[m[39;57H(B[0;7m[ Read 19 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                               script.sh                                                          [1;129H(B[m[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text[39d[3d[39;49m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result1 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'[39m(B[m$[6;1Hab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result2 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E $[8;1Hab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result3 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E $[10;1Hab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result4 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E$[12;1Hab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result5 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E$[14;1Hab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result6 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E$[16;1Hab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result7 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -$[18;1Hab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 45000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result8 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -$[20;1H(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[3d[?12l[?25h[?25l[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                               script.sh                                                          [3;1H(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result1 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'[39m(B[m$[6;1Hab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result2 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E $[8;1Hab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result3 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E $[10;1Hab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result4 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E$[12;1Hab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result5 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E$[14;1Hab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result6 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E$[16;1Hab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result7 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -$[18;1Hab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 45000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result8 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -$[20;1H(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[39;57H(B[0;7m[ Read 19 lines ][40d^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41;130H[1d[39d[K[40d[K[41;55H(B[0;7m[ Help mode disabled ](B[m[3d[?12l[?25h[?25l[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                               script.sh                                                          [3;1H(B[0m[36m#!/bin/sh[4d[39m(B[mab -p payload.json -T application/json -m POST -c 50 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result1 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E (B[0;1m[33m'[39m(B[m$[6;1Hab -p payload.json -T application/json -m POST -c 100 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result2 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E $[8;1Hab -p payload.json -T application/json -m POST -c 500 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result3 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E $[10;1Hab -p payload.json -T application/json -m POST -c 1000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result4 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E$[12;1Hab -p payload.json -T application/json -m POST -c 2000 [32m-n[39m(B[m 10000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result5 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E$[14;1Hab -p payload.json -T application/json -m POST -c 5000 [32m-n[39m(B[m 20000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result6 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -E$[16;1Hab -p payload.json -T application/json -m POST -c 10000 [32m-n[39m(B[m 30000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result7 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -$[18;1Hab -p payload.json -T application/json -m POST -c 15000 [32m-n[39m(B[m 45000 [32m-s[39m(B[m 1 [32m-r[39m(B[m http[32m:[39m(B[m//35.185.241.145[32m:[39m(B[m8080/fibonacci [32m>[39m(B[m result8 [32m&&[39m(B[m (B[0;1m[34mgrep[39m(B[m -$[20;1H(B[0;1m[34mcat[39m(B[m output1 output2 output3 output4 output5 output6 output7 output8 [32m>[39m(B[m newfile[40d[1;129H[40d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[40;113H(B[0;7mM-A(B[m Mark Text[41d(B[0;7m^X(B[m Exit[41;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[41;113H(B[0;7mM-6(B[m Copy Text[39d[39;55H(B[0;7m[ Help mode enabled ](B[m[3d[?12l[?25h[?25l[39d[J[41;130H[?12l[?25h[41;1H[?1049l[23;0;0t[?1l>]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ nano script.sh [Kcat output1 output2 output3 output4 output5 output6 output7 output8 > newfile
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile 
Concurrency Level:      50
Requests per second:    4819.43 [#/sec] (mean)
  98%     18
 100%     57 (longest request)
Concurrency Level:      100
Requests per second:    5085.30 [#/sec] (mean)
  98%     28
 100%     46 (longest request)
Concurrency Level:      500
Requests per second:    4453.16 [#/sec] (mean)
  98%   1071
 100%   1469 (longest request)
Concurrency Level:      1000
Requests per second:    3619.32 [#/sec] (mean)
  98%   1474
 100%   2759 (longest request)
Concurrency Level:      2000
Requests per second:    3556.71 [#/sec] (mean)
  98%   1928
 100%   2795 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile output1 output2 output3 output4 output5 output6 output7 output8 > newfile[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnewfile [K[Kcat newfile output1 output2 output3 output4 output5 output6 output7 output8 > newfile[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano script.sh [Kgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' result6 > output6[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano script.sh [Kab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6
Completed 2000 requests
Completed 4000 requests
Completed 6000 requests
Completed 8000 requests
Completed 10000 requests
Completed 12000 requests
Completed 14000 requests
Completed 16000 requests
Completed 18000 requests
apr_pollset_poll: The timeout specified has expired (70007)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ ab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6
Completed 2000 requests
Completed 4000 requests
Completed 6000 requests
Completed 8000 requests
Completed 10000 requests
Completed 12000 requests
Completed 14000 requests
Completed 16000 requests
Completed 18000 requests
Completed 20000 requests
Finished 20000 requests
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ ab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6[A]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Coutput1 output2 output3 output4 output5 output6 output7 output8 > newfile[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano script.sh [Kgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' result6 > output6
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ grep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' result6 > output6[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6[A]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Coutput1 output2 output3 output4 output5 output6 output7 output8 > newfile
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat output1 output2 output3 output4 output5 output6 output7 output8 > newfile[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' result6 > output6[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6[A]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
Concurrency Level:      50
Requests per second:    4819.43 [#/sec] (mean)
  98%     18
 100%     57 (longest request)
Concurrency Level:      100
Requests per second:    5085.30 [#/sec] (mean)
  98%     28
 100%     46 (longest request)
Concurrency Level:      500
Requests per second:    4453.16 [#/sec] (mean)
  98%   1071
 100%   1469 (longest request)
Concurrency Level:      1000
Requests per second:    3619.32 [#/sec] (mean)
  98%   1474
 100%   2759 (longest request)
Concurrency Level:      2000
Requests per second:    3556.71 [#/sec] (mean)
  98%   1928
 100%   2795 (longest request)
Concurrency Level:      5000
Requests per second:    2517.75 [#/sec] (mean)
  98%   4776
 100%   7895 (longest request)
]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ cat newfile output1 output2 output3 output4 output5 output6 output7 output8 > newfile[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgrep -E 'Concurrency Level:|Requests per second:|(longest request)|98%' result6 > output6[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cab -p payload.json -T application/json -m POST -c 5000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci  > result6[K7[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci >[1P result7[A]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1000 -n 20000 -s 1 -r http://35.185.241.145:8080/fibonacci > result7[A]0;dtauraso@lab04: ~/Fib[01;32mdtauraso@lab04[00m:[01;34m~/Fib[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 -n 20000 -s 1 -r http://35.18